name: Deploy to EKS Steps

on:
  workflow_call:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::246386308913:role/eks-federated-deployer
          role-session-name: eks-deployer-temporal-session
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create kube-config directory
        run: mkdir -p $HOME/.kube

      - name: Decode and set kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
        shell: bash

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version

      - name: Validate AWS Configuration
        run: |
          which aws
          aws --version
          aws sts get-caller-identity

      - name: Create dev namespace if it doesn't exist
        run: |
          kubectl get namespace dev || kubectl create namespace dev

      - name: Replace environment variables in Kubernetes manifest
        run: |
          export AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
          export AWS_REGION=${{ secrets.AWS_REGION }}
          export ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}
          export IMAGE_TAG=${{ github.event.inputs.image }}  
          envsubst < k8s/deployment.yaml | tee k8s/deployment-resolved.yaml

      - name: Check Installation
        run: |
          kubectl get pods -l app=marco-polo-app --namespace=dev
          kubectl describe deployment marco-polo-deployment --namespace=dev

      - name: Deploy to EKS
        run: kubectl apply --validate=false -f k8s/deployment-resolved.yaml --namespace=dev

      - name: Check Pod Status
        run: |
          echo "Waiting for pods to be in running state..."
          kubectl get pods -l app=marco-polo-app --namespace=dev
          kubectl wait --for=condition=Ready pod -l app=marco-polo-app --namespace=dev --timeout=120s